from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.firefox.options import Options
from bs4 import BeautifulSoup
import json

def scraper(url):
            
    print('mainkan', url)
    try:
        # Configure WebDriver to use headless Firefox
        options = Options()
        options.add_argument('-headless')
        driver = webdriver.Firefox(options=options)

        # Get the URL given
        driver.get(url)
 
        # Selenium will wait for a maximum of 5 seconds for an element matching the given criteria to be found. 
        # If no element is found in that time, Selenium will raise an error.
        try:
            wait = WebDriverWait(driver, timeout=5)
            wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, '[data-aut-id="itemsList"]')))
            print('element present')
        except:
            raise LookupError("There is no element specified")
        # BeautifulSoup will parse the URL
        content = driver.page_source
        soup = BeautifulSoup(content, 'html.parser')
 
        # Prepare the variable for JSON data
        hotels = []

            # BeautifulSoup will find the CSS class that contain product container
        for mobil in soup.find_all('li', class_='_3V_Ww'):
            
            # Get the text from the specified element and assign them to the variables
            Name = mobil.find('div', class_= '_2Gr10').text
            Price = mobil.find('span', {'class' :'_1zgtX'}).text
            Year_KM = mobil.find('div', class_='_21gnE').text
            Location = mobil.find('div', class_='_3VRSm').text
            
            # Not all hotels in the list has rating, so we should manage it. 
            # If it has rating, get the text. If none, set it to empty string.
            try:
                Installment = mobil.find_all('span', {'class':'_25Fb0'})[0].text
            except IndexError:
                # Handle the case when no span elements with the specified class are found
                Installment = ''
 
                      # Append the scraped data into hotels variable for JSON data
            hotels.append(
                {
                    'Name': Name,
                    'Price': Price,
                    'Year_KM': Year_KM,
                    'Location': Location,
                    'Installment': Installment
                }
            )
        print(hotels)
        return hotels
    except Exception as e:
        # print the error massage
        print('error: ', e)


if __name__ == '__main__':
    print("ready?")
    url = "https://www.olx.co.id/mobil-bekas_c198"
    data = scraper(url)

    with open('Secondhand Cars by OLX', 'w') as json_file:
        json.dump(data, json_file, indent=4)
